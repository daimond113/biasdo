diff --git a/dist/VirtualScroll.svelte b/dist/VirtualScroll.svelte
index dd0d175a45615889599eaa15ab275e373f8c06c1..121695d4bf6fca726b8ee7a290870c0365af584b 100644
--- a/dist/VirtualScroll.svelte
+++ b/dist/VirtualScroll.svelte
@@ -64,7 +64,7 @@
         buffer: Math.round(keeps / 3), // recommend for a third of keeps
         uniqueIds: getUniqueIdFromDataSources(),
     }, onRangeChanged)
-    let root
+    export let root
     let shepherd
     const dispatch = createEventDispatcher()
 
@@ -94,6 +94,18 @@
         }
     }
 
+    /**
+     * @type {() => number}
+     */
+    export function getOffsetDimension() {
+        const key = isHorizontal ? "offsetWidth" : "offsetHeight"
+        if (pageMode && isBrowser()) {
+            return document.documentElement[key] || document.body[key]
+        } else {
+            return root ? Math.ceil(root[key]) : 0
+        }
+    }
+
     /**
      * @type {() => number}
      */
diff --git a/dist/VirtualScroll.svelte.d.ts b/dist/VirtualScroll.svelte.d.ts
index b1d153a3fcf4bd281a89e340df5c74879860ce96..5812f900ee3454a6ad7d059e68a6aafa2bb21660 100644
--- a/dist/VirtualScroll.svelte.d.ts
+++ b/dist/VirtualScroll.svelte.d.ts
@@ -12,6 +12,7 @@ export default class VirtualScroll extends SvelteComponentTyped<{
     pageMode?: boolean | undefined;
     topThreshold?: number | undefined;
     bottomThreshold?: number | undefined;
+    root?: HTMLDivElement | undefined;
     getSize?: ((id: number) => number) | undefined;
     getSizes?: (() => number) | undefined;
     getOffset?: (() => number) | undefined;
@@ -21,6 +22,7 @@ export default class VirtualScroll extends SvelteComponentTyped<{
     scrollToOffset?: ((offset: number) => void) | undefined;
     scrollToIndex?: ((index: number) => void) | undefined;
     scrollToBottom?: (() => void) | undefined;
+    getOffsetDimension?: () => number;
 }, {
     scroll: CustomEvent<any>;
     top: CustomEvent<any>;
@@ -44,6 +46,7 @@ export default class VirtualScroll extends SvelteComponentTyped<{
     get scrollToOffset(): (offset: number) => void;
     get scrollToIndex(): (index: number) => void;
     get scrollToBottom(): () => void;
+    get getOffsetDimension(): () => number;
 }
 export type VirtualScrollProps = typeof __propDef.props;
 export type VirtualScrollEvents = typeof __propDef.events;
@@ -61,6 +64,7 @@ declare const __propDef: {
         pageMode?: boolean | undefined;
         topThreshold?: number | undefined;
         bottomThreshold?: number | undefined;
+        root?: HTMLDivElement | undefined;
         getSize?: ((id: number) => number) | undefined;
         getSizes?: (() => number) | undefined;
         getOffset?: (() => number) | undefined;
@@ -70,6 +74,7 @@ declare const __propDef: {
         scrollToOffset?: ((offset: number) => void) | undefined;
         scrollToIndex?: ((index: number) => void) | undefined;
         scrollToBottom?: (() => void) | undefined;
+        getOffsetDimension?: () => number
     };
     events: {
         scroll: CustomEvent<any>;
